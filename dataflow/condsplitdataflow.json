{
	"name": "condsplitdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employeedataset",
						"type": "DatasetReference"
					},
					"name": "sourceconditionalsplit"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdaatset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "outputdaatset",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "outputdaatset",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as string,",
				"          Name as string,",
				"          Role as string,",
				"          Salary as string,",
				"          DepartmentID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceconditionalsplit",
				"sourceconditionalsplit split(equals(DepartmentID, '101'),",
				"     equals(DepartmentID, '103'),",
				"     disjoint: false) ~> split1@(department1, department3, department7)",
				"split1@department1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DepartmentID as string,",
				"          DepartmentName as string,",
				"          Location as string",
				"     ),",
				"     partitionFileNames:['dept1.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@department3 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DepartmentID as string,",
				"          DepartmentName as string,",
				"          Location as string",
				"     ),",
				"     partitionFileNames:['dept3.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2",
				"split1@department7 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DepartmentID as string,",
				"          DepartmentName as string,",
				"          Location as string",
				"     ),",
				"     partitionFileNames:['dept7.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink3"
			]
		}
	}
}