{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "employeedataset",
						"type": "DatasetReference"
					},
					"name": "employeedata"
				},
				{
					"dataset": {
						"referenceName": "deptdataset",
						"type": "DatasetReference"
					},
					"name": "departmentdata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outputdaatset",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EmployeeID as string,",
				"          Name as string,",
				"          Role as string,",
				"          Salary as string,",
				"          DepartmentID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> employeedata",
				"source(output(",
				"          DepartmentID as string,",
				"          DepartmentName as string,",
				"          Location as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> departmentdata",
				"employeedata, departmentdata join(employeedata@DepartmentID == departmentdata@DepartmentID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          EmployeeID,",
				"          DepartmentID = departmentdata@DepartmentID,",
				"          DepartmentName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(DepartmentID,",
				"          DepartmentName),",
				"     totalempbydept = count(EmployeeID)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DepartmentID as string,",
				"          DepartmentName as string,",
				"          Location as string",
				"     ),",
				"     partitionFileNames:['joineddata.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}